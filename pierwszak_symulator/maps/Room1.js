window.OverworldMaps.Room1 = {
  id: "Room1",
  lowerSrc: "images/maps/room1Lower.png",
  upperSrc: "images/maps/room1Upper.png",
  gameObjects: {
        placeholder: new Person({
            isPlayerControlled: false,
            src: "images/maps/blank.png",
            x: utils.withGrid(4),
            y: utils.withGrid(7),
            walkable: true,
        }),
      hero: new Person({
          isPlayerControlled: true, 
          useShadow: true,
          direction: "up",
          x: utils.withGrid(4),
          y: utils.withGrid(19),
      }),
      kartka: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(4),
        y: utils.withGrid(8),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "room1_hint"},]},],
    }),
    ulysses: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(2),
        y: utils.withGrid(4),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "ulysses"},]},],
    }),
    donkiszot: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(1),
        y: utils.withGrid(4),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "donkiszot"},]},],
    }),
    hamlet: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(5),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "hamlet"},]},],
    }),
    karenina: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(6),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "karenina"},]},],
    }),
    kameliowa: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(7),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "kameliowa"},]},],
    }),
    boskakomedia: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(8),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "boskakomedia"},]},],
    }),
    romeo: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(9),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "romeoijulia"},]},],
    }),
    zludzenia: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(10),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "straconezludzenia"},]},],
    }),
    spadek: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(11),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "spadek"},]},],
    }),
    jim: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(12),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "lordjim"},]},],
    }),
    wichrowe: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(13),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "wichrowewzgorza"},]},],
    }),
    otello: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(14),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "otello"},]},],
    }),
    odyseja: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(15),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "odyseja"},]},],
    }),
    giaur: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(0),
        y: utils.withGrid(16),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "giaur"},]},],
    }),
    dzieje: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(16),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "dziejegrzechu"},]},],
    }),
    tristan: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(15),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "tristan_i_izolda"},]},],
    }),
    nedznicy: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(14),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "nedznicy"},]},],
    }),
    przeminelo: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(13),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "przeminelo"},]},],
    }),
    cristo: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(12),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "cristo"},]},],
    }),
    dusze: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(11),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "dusze"},]},],
    }),
    noce: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(10),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "noce"},]},],
    }),
    wojnaipokoj: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(9),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "wojnaipokoj"},]},],
    }),
    upadek: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(8),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "upadek"},]},],
    }),
    piesni: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(7),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "piesni"},]},],
    }),
    goriot: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(6),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "goriot"},]},],
    }),
    sonet: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(9),
        y: utils.withGrid(5),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "sonet"},]},],
    }),
    dzwon: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(8),
        y: utils.withGrid(4),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "dzwon"},]},],
    }),
    pozegnanie: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(7),
        y: utils.withGrid(4),
        counter: 0,
        talking: [{events: [{type: "book",book_id: "pozegnanie"},]},],
    }),
    drzwi1: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(4),
        y: utils.withGrid(4),
        counter: 0,
        talking: [{events: [{type: "door1"},]},],
    }),
    drzwi2: new Person({
        isPlayerControlled: false,
        src: "images/maps/blank.png",
        x: utils.withGrid(5),
        y: utils.withGrid(4),
        counter: 0,
        talking: [{events: [{type: "door1"},]},],
    }),
  },
  cutsceneSpaces: {
          [utils.asGridCoord(4, 17)]: [
          {
              events: [
                  {
                      type: "changeMap",
                      map: "Prolog",
                      x: utils.withGrid(4),
                      y: utils.withGrid(2),
                      direction: "down"
                  },
              ]
          }
      ],
      [utils.asGridCoord(5, 17)]: [
        {
            events: [
                {
                    type: "changeMap",
                    map: "Prolog",
                    x: utils.withGrid(5),
                    y: utils.withGrid(2),
                    direction: "down"
                },
            ]
        }
    ],
  },
  walls: {
     [utils.asGridCoord(4, 18)]: true,
     [utils.asGridCoord(5, 18)]: true,
     [utils.asGridCoord(1, 17)]: true,
     [utils.asGridCoord(2, 17)]: true,
     [utils.asGridCoord(3, 17)]: true,
     [utils.asGridCoord(6, 17)]: true,
     [utils.asGridCoord(7, 17)]: true,
     [utils.asGridCoord(8, 17)]: true,
     [utils.asGridCoord(0, 5)]: true,
     [utils.asGridCoord(0, 6)]: true,
     [utils.asGridCoord(0, 7)]: true,
     [utils.asGridCoord(0, 8)]: true,
     [utils.asGridCoord(0, 9)]: true,
     [utils.asGridCoord(0, 10)]: true,
     [utils.asGridCoord(0, 11)]: true,
     [utils.asGridCoord(0, 12)]: true,
     [utils.asGridCoord(0, 13)]: true,
     [utils.asGridCoord(0, 14)]: true,
     [utils.asGridCoord(0, 15)]: true,
     [utils.asGridCoord(0, 16)]: true,
     [utils.asGridCoord(0, 17)]: true,
     [utils.asGridCoord(0, 18)]: true,
     [utils.asGridCoord(1, 4)]: true,
     [utils.asGridCoord(2, 4)]: true,
     [utils.asGridCoord(3, 4)]: true,
     [utils.asGridCoord(6, 4)]: true,
     [utils.asGridCoord(7, 4)]: true,
     [utils.asGridCoord(8, 4)]: true,
     [utils.asGridCoord(9, 5)]: true,
     [utils.asGridCoord(9, 6)]: true,
     [utils.asGridCoord(9, 7)]: true,
     [utils.asGridCoord(9, 8)]: true,
     [utils.asGridCoord(9, 9)]: true,
     [utils.asGridCoord(9, 10)]: true,
     [utils.asGridCoord(9, 11)]: true,
     [utils.asGridCoord(9, 12)]: true,
     [utils.asGridCoord(9, 13)]: true,
     [utils.asGridCoord(9, 14)]: true,
     [utils.asGridCoord(9, 15)]: true,
     [utils.asGridCoord(9, 16)]: true,
     [utils.asGridCoord(9, 17)]: true,
     [utils.asGridCoord(9, 18)]: true,
     [utils.asGridCoord(4, 8)]: true,
     [utils.asGridCoord(5, 8)]: true,
     [utils.asGridCoord(3, 16)]: true,
     [utils.asGridCoord(6, 16)]: true,
  },
  start_func: function(){
    document.querySelector(".pokoj").innerText = "Biblioteka"
    const eventHandler5 = new OverworldEvent({type:"play_audio",audio:"music",volume:0.1});
  eventHandler5.init();
    if(window.quests.length == 2){
        return
    }
    const quest = new QuestLog({onComplete: () => {}});
    quest.add_quest({id: "Zagadka",desc: "Znajdź hasło do drzwi",});
  }
};